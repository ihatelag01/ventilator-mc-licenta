/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/mainscreen_screen/mainScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

mainScreenViewBase::mainScreenViewBase() :
    buttonCallback(this, &mainScreenViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &mainScreenViewBase::sliderValueChangedCallbackHandler)
{

    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    btnOn.setXY(57, 80);
    btnOn.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_PRESSED_ID));
    btnOn.setLabelText(touchgfx::TypedText(T___SINGLEUSE_DIGB));
    btnOn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnOn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnOn.setAction(buttonCallback);

    btnOff.setXY(57, 177);
    btnOff.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_PRESSED_ID));
    btnOff.setLabelText(touchgfx::TypedText(T___SINGLEUSE_QD9Y));
    btnOff.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnOff.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnOff.setAction(buttonCallback);

    slider1.setXY(11, 71);
    slider1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
    slider1.setupVerticalSlider(7, 3, 0, 0, 125);
    slider1.setValueRange(0, 2000);
    slider1.setValue(0);
    slider1.setNewValueCallback(sliderValueChangedCallback);

    textArea1.setXY(35, 8);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_P95G));

    textArea2.setXY(61, 47);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1VDM));

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_LOGO_USV_25MM_300DPI_0_ID));
    scalableImage1.setPosition(0, 91, 234, 215);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    scalableImage1.setAlpha(123);

    buttonWithIcon1.setXY(57, 246);
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_EMAIL_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_EMAIL_32_ID));
    buttonWithIcon1.setIconXY(70, 16);
    buttonWithIcon1.setAction(buttonCallback);

    add(__background);
    add(btnOn);
    add(btnOff);
    add(slider1);
    add(textArea1);
    add(textArea2);
    add(scalableImage1);
    add(buttonWithIcon1);
}

void mainScreenViewBase::setupScreen()
{

}

void mainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btnOn)
    {
        //btnOnClick
        //When btnOn clicked execute C++ code
        //Execute C++ code
        HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, (GPIO_PinState)0);
        HAL_Delay(1000);
        HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, (GPIO_PinState)1);
        vTaskResume((TaskHandle_t)mySensorTaskHandle);
        HAL_Delay(100);
        
        user_pwm_setvalue(2000);
    }
    else if (&src == &btnOff)
    {
        //btnOffClick
        //When btnOff clicked execute C++ code
        //Execute C++ code
        vTaskSuspend((TaskHandle_t)mySensorTaskHandle);
        HAL_Delay(100);
        user_pwm_setvalue(0);
    }
    else if (&src == &buttonWithIcon1)
    {
        //Interaction1
        //When buttonWithIcon1 clicked change screen to secondScreen
        //Go to secondScreen with no screen transition
        application().gotosecondScreenScreenNoTransition();
    }
}

void mainScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &slider1)
    {
        //sliderChange
        //When slider1 value changed execute C++ code
        //Execute C++ code
        user_pwm_setvalue(slider1.getValue());
    }
}
